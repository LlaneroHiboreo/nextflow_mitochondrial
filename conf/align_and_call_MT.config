process {
    withName: 'BWAMEM2_MEM_MT' {
        ext.when = { !params.skip_mt_analysis && !(params.analysis_type == "wes") && params.aligner == "bwamem2" }
        ext.args = { "-M -K 100000000 -R ${meta.read_group}" }
    }

    withName: 'GATK4_MERGEBAMALIGNMENT_MT' {
        ext.args = '--CREATE_INDEX true --MAX_GAPS -1  --SORT_ORDER queryname --INCLUDE_SECONDARY_ALIGNMENTS false --PAIRED_RUN true --VALIDATION_STRINGENCY SILENT --EXPECTED_ORIENTATIONS FR --ATTRIBUTES_TO_RETAIN X0 --ATTRIBUTES_TO_REMOVE NM --ATTRIBUTES_TO_REMOVE MD --IS_BISULFITE_SEQUENCE false --ALIGNED_READS_ONLY false --CLIP_ADAPTERS false --UNMAPPED_READ_STRATEGY COPY_TO_TAG --ALIGNER_PROPER_PAIR_FLAGS true --UNMAP_CONTAMINANT_READS true --ADD_PG_TAG_TO_READS false'
        ext.prefix = { "${meta.id}_merged" }
    }

    withName: 'PICARD_ADDORREPLACEREADGROUPS_MT' {
        ext.args = { [
            "--VALIDATION_STRINGENCY LENIENT",
            "--RGLB lib",
            "--RGPL ILLUMINA",
            "--RGPU barcode",
            "--RGSM ${meta.id}"
        ].join(' ' ).trim() }
    }

    withName: 'PICARD_MARKDUPLICATES_MT' {
        ext.args = '--VALIDATION_STRINGENCY SILENT --CREATE_INDEX true --OPTICAL_DUPLICATE_PIXEL_DISTANCE 2500 --ASSUME_SORT_ORDER "queryname" --CLEAR_DT false --ADD_PG_TAG_TO_READS false'
        ext.prefix = { "${meta.id}_markduplicates" }
    }

    withName: 'SAMTOOLS_SORT_MT' {
        ext.prefix = { "${meta.id}_sorted" }
    }

    withName: 'MT_DELETION' {
        ext.args = '-s --insert-size 16000'
        publishDir = [
            path: { "${params.outdir}/mt_sv" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_MUTECT2_MT' {
        ext.args = '--mitochondria-mode TRUE --read-filter MateOnSameContigOrNoMappedMateReadFilter --read-filter MateUnmappedAndUnmappedReadFilter -L "chrM:576-16024" --annotation StrandBiasBySample --max-reads-per-alignment-start 75 --max-mnp-distance 0'
    }

    withName: 'GATK4_FILTERMUTECTCALLS_MT' {
        ext.prefix = { "${meta.id}_filtered" }
        ext.args = {"--max-alt-allele-count 4 --mitochondria-mode --min-allele-fraction 0"}
    }
}

//
// ANALYSE_MT:ALIGN_AND_CALL_MT_SHIFT
//

process {

    withName: 'BWAMEM2_MEM_MT' {
        ext.when = { !params.skip_mt_analysis && !(params.analysis_type == "wes") && params.aligner == "bwamem2" }
        ext.args = { "-M -K 100000000 -R ${meta.read_group}" }
    }

    withName: 'GATK4_MERGEBAMALIGNMENT_MT' {
        ext.args = '--CREATE_INDEX true --MAX_GAPS -1  --SORT_ORDER queryname --INCLUDE_SECONDARY_ALIGNMENTS false --PAIRED_RUN true --VALIDATION_STRINGENCY SILENT --EXPECTED_ORIENTATIONS FR --ATTRIBUTES_TO_RETAIN X0 --ATTRIBUTES_TO_REMOVE NM --ATTRIBUTES_TO_REMOVE MD --IS_BISULFITE_SEQUENCE false --ALIGNED_READS_ONLY false --CLIP_ADAPTERS false --UNMAPPED_READ_STRATEGY COPY_TO_TAG --ALIGNER_PROPER_PAIR_FLAGS true --UNMAP_CONTAMINANT_READS true --ADD_PG_TAG_TO_READS false'
        ext.prefix = { "${meta.id}_merged_shifted" }
    }

    withName: 'PICARD_ADDORREPLACEREADGROUPS_MT' {
        ext.args =  { [
            "--VALIDATION_STRINGENCY LENIENT",
            "--RGLB lib",
            "--RGPL ${params.platform}",
            "--RGPU barcode",
            "--RGSM ${meta.id}"
        ].join(' ' ).trim() }
    }

    withName: 'PICARD_MARKDUPLICATES_MT' {
        ext.args = '--VALIDATION_STRINGENCY SILENT --CREATE_INDEX true --OPTICAL_DUPLICATE_PIXEL_DISTANCE 2500 --ASSUME_SORT_ORDER "queryname" --CLEAR_DT false --ADD_PG_TAG_TO_READS false'
        ext.prefix = { "${meta.id}_markduplicates_shifted" }
    }

    withName: 'SAMTOOLS_SORT_MT' {
        ext.prefix = { "${meta.id}_sorted_shifted" }
    }

    withName: 'GATK4_MUTECT2_MT' {
        ext.args = '--mitochondria-mode TRUE --read-filter MateOnSameContigOrNoMappedMateReadFilter --read-filter MateUnmappedAndUnmappedReadFilter -L "chrM:8025-9144" --max-reads-per-alignment-start 75 --max-mnp-distance 0 --annotation StrandBiasBySample'
    }

    withName: 'HAPLOCHECK_MT' {
        ext.prefix = { "${meta.id}_shifted" }
    }

    withName: 'GATK4_FILTERMUTECTCALLS_MT' {
        ext.prefix = { "${meta.id}_filtered_shifted" }
    }
}