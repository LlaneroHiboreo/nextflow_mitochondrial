/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

//
// Mitochondrial annotation options
//

process {

    withName: 'GATK4_MERGEVCFS_LIFT_UNLIFT_MT' {
        ext.prefix = { "${meta.id}_merged" }
    }

    withName: 'GATK4_VARIANTFILTRATION_MT' {
        ext.prefix = { "${meta.id}_filt" }
        ext.args = { "--mask-name 'blacklisted_site' --apply-allele-specific-filters" }
    }

    withName: 'SPLIT_MULTIALLELICS_MT' {
        ext.args = '--output-type z --multiallelics -both'
        ext.prefix = { "${meta.id}_split" }
    }

    withName: 'REMOVE_DUPLICATES_MT' {
        ext.args = '--output-type z --rm-dup none'
        ext.prefix = { "${meta.id}_split_rmdup" }
    }

    withName: 'BCFTOOLS_MERGE_MT' {
        ext.args = '--output-type z'
        ext.prefix = { "${meta.id}_merge_mt" }
    }

    withName: 'SNPSIFT_ANNOTATE_GNOMAD' {
        ext.prefix = { "${meta.id}_ann_gnomad" }
        publishDir = [
            path: { "${params.outdir}/annotate_mt/gnomad" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SNPSIFT_ANNOTATE_MITOMAP_DISEASE' {
        ext.prefix = { "${meta.id}_ann_mitomap_disease" }
        publishDir = [
            path: { "${params.outdir}/annotate_mt/mitomap" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SNPSIFT_ANNOTATE_MITOMAP_POLYMORPHISMS' {
        ext.prefix = { "${meta.id}_ann_mitomap_polymorphism" }
        publishDir = [
            path: { "${params.outdir}/annotate_mt/mitomap" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SNPSIFT_ANNOTATE_MITOMAP_TIP' {
        ext.prefix = { "${meta.id}_ann_mitomap_tip" }
        publishDir = [
            path: { "${params.outdir}/annotate_mt/mitomap" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BCFTOOLS_FILTER_PASS' {
        ext.prefix = { "${meta.id}_filtered_PASS" }
        ext.args   = { "--output-type z -i 'FILTER==${params.filter}'" }
        publishDir = [
            path: { "${params.outdir}/annotate_filtered/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BCFTOOLS_FILTER_MITOMAP' {
        ext.prefix = { "${meta.id}_filtered_PASS_DISEASESTATUS" }
        ext.args   = { "--output-type z -i '(FORMAT/AF>=0.01 & MitoMap_DiseaseStatus==${params.MitoMap_DiseaseStatus}) | (FORMAT/AF>=0.01 & MitoMap_DiseaseStatus==${params.MitoMap_DiseaseStatus2} & MitoMap_AF < 0.5)'" }
        publishDir = [
            path: { "${params.outdir}/annotate_filtered/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'IGVREPORTS_NO_FILTERED' {
        ext.args   = {"--info-columns MitoMap_Disease MitoMap_DiseaseStatus MitoMap_AF gnomAD_WG_AF_het gnomAD_WG_AF_hom"}
        ext.prefix = { "${meta.id}_no_filtered" }
        publishDir = [
            path: { "${params.outdir}/igvreports/" },
            mode: params.publish_dir_mode,
            pattern: "*"
        ]
    }

    /*
    withname:'VCF2TABULAR'{
        publishDir = [
            path: { "${params.outdir}/reports/" },
            mode: params.publish_dir_mode,
            pattern: "*"
        ]
    }
    */

    withName: 'IGVREPORTS_FILTERED' {
        ext.args   = {"--info-columns MitoMap_Disease MitoMap_DiseaseStatus MitoMap_AF gnomAD_WG_AF_het gnomAD_WG_AF_hom"}
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/reports/" },
            mode: params.publish_dir_mode,
            pattern: "*"
        ]
    }
}